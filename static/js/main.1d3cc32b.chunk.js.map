{"version":3,"sources":["rootReducer.js","store.js","containers/NavLink.js","config.js","containers/Header.js","containers/Footer.js","containers/Hero.js","views/Home.js","containers/Loading.js","views/Form/List.js","views/Form/Create.js","views/Form/Item/View.js","views/Form/Item/Edit.js","containers/Confirm.js","views/Form/Item/Delete.js","views/Form/Item/Submission/List.js","views/Form/Item/Submission/Item/View.js","views/Form/Item/Submission/Item/Edit.js","views/Form/Item/Submission/Item/Delete.js","views/Form/Item/Submission/Item/index.js","views/Form/Item/Submission/index.js","views/Form/Item/index.js","views/Form/index.js","views/Event/List.js","views/Event/Create.js","views/Event/Item/View.js","views/Event/Item/Edit.js","views/Event/Item/Delete.js","views/Event/Item/index.js","views/Event/index.js","views/Colonie.js","views/Auth/Login.js","views/Auth/Register.js","views/Auth/Auth.js","App.js","components/CheckMatrix.js","components/ReactExample/ReactExample.jsx","components/ReactExample/ReactExample.settingsForm.js","components/index.js","index.js"],"names":["combineReducers","auth","form","name","forms","query","type","tags","submission","submissions","event","history","createHistory","middleware","thunk","routerMiddleware","composedEnhancers","compose","applyMiddleware","createStore","connectRouter","rootReducer","NavLink","Component","render","this","props","to","location","exact","role","className","children","liClass","matchPath","pathname","path","strict","Link","defaultProps","withRouter","PROJECT_URL","API_URL","window","search","substr","split","forEach","item","decodeURIComponent","AppConfig","projectUrl","apiUrl","AuthConfig","Header","logout","alt","src","height","is","hasOwnProperty","administrator","authenticated","connect","state","selectRoot","dispatch","push","Footer","style","padding","Hero","href","target","rel","Home","user","data","email","List","componentWillMount","getForms","onAction","errors","isActive","Loading","selectError","page","indexForms","action","_id","display","saveText","saveForm","newForm","err","View","hideComponents","onSubmit","options","url","title","template","iconset","noAlerts","ownProps","saveSubmission","match","params","formId","resetSubmissions","selectForm","onYes","onNo","message","yesText","noText","onClick","deleteForm","resetForms","goBack","Confirm","getSubmissions","isLoading","aria-hidden","isFormActive","isSubActive","readOnly","Edit","deleteSubmission","submissionId","Item","constructor","super","nextProps","prevState","getSubmission","Switch","Route","component","Delete","id","Form","getForm","Submission","Create","length","_get","eventId","Colonie","Login","onSubmitDone","setUser","Register","Auth","paddingBottom","borderBottom","App","Event","CheckMatrix","Base","foo","schema","numRows","numCols","tableClass","prop","content","i","row","j","cell","renderTemplate","input","ref","key","attr","class","attach","element","refs","loadRefs","checks","Array","prototype","slice","call","addEventListener","updateValue","getValue","value","rowIndex","colIndex","col","checked","setValue","builderInfo","group","icon","weight","documentation","editForm","Example","setState","onChange","ReactExample","ReactComponent","label","attachReact","console","log","ReactDOM","dataValue","detachReact","unmountComponentAtNode","extend","baseEditForm","components","ignore","checkmatrix","reactexample","Formio","setProjectUrl","setBaseUrl","Components","setComponents","store","initAuth","document","getElementById"],"mappings":"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","file":"static/js/main.1d3cc32b.chunk.js","sourcesContent":["import { combineReducers } from 'redux'\nimport { auth, form, forms, submission, submissions } from 'react-formio';\n\nexport default combineReducers({\n  auth: auth(),\n  form: form({name: 'form'}),\n  forms: forms({ name: 'forms', query: {type: 'form', tags: 'common'}}),\n  submission: submission({name: 'submission'}),\n  submissions: submissions({name: 'submissions'}),\n  event: combineReducers({\n    form: form({ name: 'event'}),\n    submission: submission({name: 'event'}),\n    submissions: submissions({name: 'event'}),\n  })\n})\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\nimport thunk from 'redux-thunk'\nimport { createHashHistory as createHistory } from 'history'\nimport rootReducer from './rootReducer'\n\nexport const history = createHistory()\n\nconst initialState = {}\nconst enhancers = []\nconst middleware = [thunk, routerMiddleware(history)]\n\nif (process.env.NODE_ENV === 'development') {\n  const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__\n\n  if (typeof devToolsExtension === 'function') {\n    enhancers.push(devToolsExtension())\n  }\n}\n\nconst composedEnhancers = compose(\n  applyMiddleware(...middleware),\n  ...enhancers\n)\n\nexport default createStore(\n  connectRouter(history)(rootReducer),\n  initialState,\n  composedEnhancers\n)\n","import React, {Component} from 'react';\nimport {Link, withRouter, matchPath} from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nclass NavLink extends Component {\n  static propTypes = {\n    to: PropTypes.string.isRequired,\n    exact: PropTypes.bool\n  };\n\n  static defaultProps = {\n    exact: false\n  };\n\n  render() {\n    const {to, location, exact, role, className, children} = this.props;\n\n    const liClass = matchPath(location.pathname, {\n      path: to,\n      exact,\n      strict: false\n    }) ? 'nav-item active' : 'nav-item';\n\n    return (\n      <li className={liClass}>\n        <Link {...{to, role, className}}>{children}</Link>\n      </li>\n    );\n  }\n}\n\nexport default withRouter(props => <NavLink {...props}/>)\n","var PROJECT_URL = 'https://ivzftkhgysqjtha.form.io';\n//real\n//var PROJECT_URL = 'https://khrhsapilcvvkjo.form.io';\nvar API_URL = 'https://api.form.io';\n\nvar query = {};\nwindow.location.search.substr(1).split('&').forEach(function(item) {\n  query[item.split('=')[0]] = item.split('=')[1] && decodeURIComponent(item.split('=')[1]);\n});\n\nPROJECT_URL = query.projectUrl || PROJECT_URL;\nAPI_URL = query.apiUrl || API_URL;\n\nexport const AppConfig = {\n  projectUrl: PROJECT_URL,\n  apiUrl: API_URL\n};\n\nexport const AuthConfig = {\n  anonState: '/auth',\n  authState: '/',\n  login: {\n    form: 'user/login'\n  },\n  register: {\n    form: 'user/register'\n  }\n};\n","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport {PropTypes} from 'prop-types';\nimport {Link} from 'react-router-dom';\nimport {push} from \"connected-react-router\";\nimport NavLink from './NavLink';\nimport { selectRoot, logout } from \"react-formio\";\nimport {AuthConfig} from \"../config\";\n\nconst Header = class extends Component {\n  static propTypes = {\n    auth: PropTypes.object.isRequired,\n    logout: PropTypes.func.isRequired\n  };\n\n  render() {\n    const {auth, logout} = this.props;\n\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            <img className=\"logo\" alt=\"logo CM\" src=\"/murialdo_test/static/logo.png\" height=\"25px\" />\n          </Link>\n          <ul className=\"nav navbar-nav mr-auto\">\n            <NavLink exact to=\"/\" role=\"navigation button\" className=\"nav-link\">\n              <span className=\"fa fa-home\" />\n            </NavLink>\n            { (auth.is.hasOwnProperty('administrator') && auth.is.administrator) ? (\n              <NavLink to=\"/form\" role=\"navigation link\" className=\"nav-link\">\n                <i className=\"fa fa-wpforms\"></i>&nbsp;\n                Forms\n              </NavLink>\n            ) : null }\n            { auth.authenticated ? (\n              <NavLink to=\"/colonie\" role=\"navigation link\" className=\"nav-link\">\n                <i className=\"fa fa-calendar\"></i>&nbsp;\n                Events\n              </NavLink>\n            ) : null }\n          </ul>\n\n        </div>\n      </nav>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: selectRoot('auth', state)\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    logout: () => {\n      dispatch(logout());\n      dispatch(push(AuthConfig.anonState));\n    }\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Header)\n","import React, {Component} from 'react';\n\nexport default class Footer extends Component {\n  render() {\n    return (\n      <footer className=\"footer\">\n        <div className=\"container text-center\" style={{padding: '15px'}}>\n          Built with ♥ by Xavi Torné for Murialdo\n        </div>\n      </footer>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport { Button } from 'react-bootstrap';\nimport NavLink from './NavLink';\n\nexport default class Hero extends Component {\n  render() {\n    return (\n      <div className=\"jumbotron text-center\" style={{'marginTop': '-40px'}}>\n            <h2 className=\"title\">\n            ISCRIZIONI Colonie estive 2020\n            <br/>\n            <span className=\"text-blue\">C’entro Anch’io – Comunità Murialdo</span>\n            </h2>\n            <div className=\"row mt-50\">\n          <div className=\"col-sm-12 col-sm-offset-3 text-justify\">\n            <p className=\"lead\">\n            Attraverso questo modulo è possibile effettuare on-line la prenotazione alle colonie estive del C’entro Anch’io della Comunità Murialdo in collaborazione con il Comune di Rovereto. Una volta cliccato su -Invia- riceverete sulla email indicata la ricevuta dell'avvenuta prenotazione.\n            </p>\n            <p className=\"lead\">Scarica QUI il dettaglio delle proposte.</p>\n          </div>\n\n          <div className=\"col-sm-12 col-sm-offset-3 text-center\">\n            <p className=\"lead\">Costi: 30 euro a settimana</p>\n            <p className=\"lead\">Hai bisogno di aiuto per la iscrizione?</p>\n            <ul className=\"list-inline\">\n              <li>\n                Chiama al <a href=\"tel:0464-412886\">0464-412886</a>\n              </li>\n              <li>\n                Scrivici a <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"mailto:centroanchio@murialdo.taa.it\">centroanchio@murialdo.taa.it</a>\n              </li>\n            </ul>\n              <NavLink to=\"/colonie\"  className=\"btn btn-lg btn-success nolist\">\n              Fai la iscrizione\n              </NavLink>\n\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport {PropTypes} from 'prop-types';\nimport Hero from '../containers/Hero';\nimport { selectRoot } from \"react-formio\";\n\nconst Home = class extends Component {\n  static propTypes = {\n    auth: PropTypes.object.isRequired\n  };\n\n  render() {\n    const {auth} = this.props;\n    return (\n      <div>\n        <Hero />\n        <div className=\"container\">\n          { auth.authenticated ? (\n            <div className=\"well text-center\">\n              { (auth.user && auth.user.data) ?\n                (\n                  <h3>\n                    You are logged in as&nbsp;\n                    <strong>{ auth.user.data.email }</strong>\n                    !\n                  </h3>\n                ) : null\n              }\n            </div>) :\n            null\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: selectRoot('auth', state)\n  }\n}\n\nconst mapDispatchToProps = () => {\n  return {};\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Home)\n","import React from 'react';\n\nexport default () => (\n  <div>Loading...</div>\n)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { push } from 'connected-react-router'\nimport { Link } from 'react-router-dom'\nimport { indexForms, selectRoot, selectError, Errors, FormGrid } from 'react-formio';\nimport Loading from \"../../containers/Loading\";\n\nconst List = class extends Component {\n  componentWillMount() {\n    this.props.getForms(1);\n  }\n\n  render() {\n    const { forms, onAction, getForms, errors } = this.props;\n\n    if (forms.isActive) {\n      return (\n        <Loading />\n      );\n    }\n\n    return (\n      <div>\n        <h1>Forms</h1>\n        <Errors errors={errors} />\n        <FormGrid\n          forms={forms}\n          onAction={onAction}\n          getForms={getForms}\n        />\n        <Link className=\"btn btn-primary\" to=\"/form/create\"><i className=\"fa fa-plus\"></i> Create Form</Link>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    forms: selectRoot('forms', state),\n    errors: selectError('forms', state),\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getForms: (page, query) => {\n      dispatch(indexForms('forms', page, query))\n    },\n    onAction: (form, action) => {\n      switch(action) {\n        case 'view':\n          dispatch(push(`/form/${form._id}`));\n          break;\n        case 'submission':\n          dispatch(push(`/form/${form._id}/submission`));\n          break;\n        case 'edit':\n          dispatch(push(`/form/${form._id}/edit`));\n          break;\n        case 'delete':\n          dispatch(push(`/form/${form._id}/delete`));\n          break;\n        default:\n      }\n    }\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(List);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { saveForm, selectError, FormEdit, Errors } from 'react-formio';\nimport {push} from 'connected-react-router';\n\nconst Create = props => {\n  return (\n    <div>\n      <h2>Create Form</h2>\n      <hr />\n      <Errors errors={props.errors} />\n      <FormEdit {...props} />\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    form: {display: 'form'},\n    saveText: 'Create Form',\n    errors: selectError('form', state),\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    saveForm: (form) => {\n      const newForm = {\n        ...form,\n        tags: ['common'],\n      };\n      dispatch(saveForm('form', newForm, (err, form) => {\n        if (!err) {\n          dispatch(push(`/form/${form._id}`))\n        }\n      }))\n    }\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Create)\n","import React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { selectRoot, resetSubmissions, saveSubmission, Form, selectError, Errors } from 'react-formio';\nimport {push} from 'connected-react-router';\nimport Loading from '../../../containers/Loading';\n\nconst View = class extends Component {\n  render() {\n    const {\n      submission,\n      hideComponents,\n      onSubmit,\n      errors,\n      options,\n      form: {form, isActive, url}\n    } = this.props;\n\n    if (isActive) {\n      return <Loading />;\n    }\n\n    return (\n      <div>\n        <h3>New { form.title }</h3>\n        <Errors errors={errors} />\n        <Form\n          form={form}\n          submission={submission}\n          url={url}\n          options={{...{template: 'bootstrap3', iconset: 'fa'},  ...options}}\n          hideComponents={hideComponents}\n          onSubmit={onSubmit}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    form: selectRoot('form', state),\n    errors: [\n      selectError('form', state),\n      selectError('submission', state),\n    ],\n    options: {\n      noAlerts: true\n    },\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    onSubmit: (submission) => {\n      dispatch(saveSubmission('submission', submission, ownProps.match.params.formId, (err, submission) => {\n        if (!err) {\n          dispatch(resetSubmissions('submission'));\n          dispatch(push(`/form/${ownProps.match.params.formId}/submission/${submission._id}`))\n        }\n      }));\n    }\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(View)\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { saveForm, selectForm, FormEdit, Errors, selectError } from 'react-formio';\n\nconst Edit = props => (\n  <div>\n    <h2>Edit {props.form.title} Form</h2>\n    <hr />\n    <Errors errors={props.errors} />\n    <FormEdit {...props} />\n  </div>\n)\n\nconst mapStateToProps = (state) => {\n  return {\n    form: selectForm('form', state),\n    saveText: 'Save Form',\n    errors: selectError('form', state),\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    saveForm: (form) => dispatch(saveForm('form', form, (err, form) => {\n      if (!err) {\n        // TODO: Display a save success message here.\n      }\n    }))\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Edit)\n","import React, { Component } from 'react';\n\nexport default class extends Component {\n  render() {\n    const {onYes, onNo, message, yesText = 'Yes', noText = 'No'} = this.props;\n    return (\n      <div>\n        <h3>{message}</h3>\n        <div className=\"btn-toolbar\">\n          <span onClick={onYes} className=\"btn btn-danger\">{yesText}</span>\n          <span onClick={onNo} className=\"btn btn-default\">{noText}</span>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Confirm from '../../../containers/Confirm';\nimport { deleteForm, resetForms, selectError, Errors } from 'react-formio';\nimport {push, goBack} from 'connected-react-router';\n\nconst Delete = props => (\n  <div>\n    <Errors errors={props.errors} />\n    <Confirm {...props} />\n  </div>\n)\n\nconst mapStateToProps = (state) => {\n  return {\n    message: `Are you sure you wish to delete the form \"${state.form.form.title}\"?`,\n    errors: selectError('form', state),\n  }\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    onYes: () => {\n      dispatch(deleteForm('form', ownProps.match.params.formId, (err) => {\n        if (!err) {\n          dispatch(resetForms('forms'));\n          dispatch(push('/form'));\n        }\n      }));\n    },\n    onNo: () => {\n      dispatch(goBack());\n    }\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Delete)\n","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport { push } from 'connected-react-router';\nimport { getSubmissions, selectRoot, selectError, SubmissionGrid, Errors } from 'react-formio';\nimport Loading from '../../../../containers/Loading';\n\nconst List = class extends Component {\n  componentWillMount() {\n    this.props.getSubmissions(1);\n  }\n\n  render() {\n    const {match: {params: {formId}}} = this.props\n    const {form, submissions, isLoading, onAction, getSubmissions, errors} = this.props\n\n    if (isLoading) {\n      return (\n        <Loading />\n      );\n    }\n\n    return (\n      <div className='form-index'>\n        <Errors errors={errors} />\n        <SubmissionGrid\n          submissions={submissions}\n          form={form}\n          onAction={onAction}\n          getSubmissions={getSubmissions}\n        />\n        <Link className='btn btn-primary' to={`/form/${formId}`}>\n          <i className='glyphicon glyphicon-plus fa fa-plus' aria-hidden='true'></i>\n          New {form.title}\n        </Link>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const form = selectRoot('form', state);\n  const submissions = selectRoot('submissions', state);\n\n  return {\n    form: form.form,\n    submissions: submissions,\n    isLoading: form.isActive || submissions.isActive,\n    errors: [\n      selectError('submissions', state),\n      selectError('form', state)\n    ]\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    getSubmissions: (page, query) => dispatch(getSubmissions('submissions', page, query, ownProps.match.params.formId)),\n    onAction: (submission, action) => {\n     switch(action) {\n        case 'view':\n        case 'row':\n          dispatch(push(`/form/${ownProps.match.params.formId}/submission/${submission._id}`));\n          break;\n        case 'edit':\n          dispatch(push(`/form/${ownProps.match.params.formId}/submission/${submission._id}/edit`));\n          break;\n        case 'delete':\n          dispatch(push(`/form/${ownProps.match.params.formId}/submission/${submission._id}/delete`));\n          break;\n        default:\n      }\n    },\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(List)\n","import React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux'\nimport {selectRoot, resetSubmissions, saveSubmission, Form, selectError, Errors} from 'react-formio';\nimport {push} from 'connected-react-router';\nimport Loading from '../../../../../containers/Loading'\n\nconst View = class extends Component {\n  render() {\n    const {\n      hideComponents,\n      onSubmit, options,\n      errors,\n      form: {form, isActive: isFormActive},\n      submission: {submission, isActive: isSubActive, url}\n    } = this.props;\n\n    if (isFormActive || isSubActive) {\n      return <Loading />;\n    }\n\n    return (\n      <div>\n        <h3>View { form.title } Submission</h3>\n        <Errors errors={errors} />\n        <Form\n          form={form}\n          submission={submission}\n          url={url}\n          hideComponents={hideComponents}\n          onSubmit={onSubmit}\n          options={{...{template: 'bootstrap3', iconset: 'fa'},  ...options}}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    form: selectRoot('form', state),\n    submission: selectRoot('submission', state),\n    options: {\n      readOnly: true,\n    },\n    errors: [\n      selectError('submission', state),\n      selectError('form', state)\n    ],\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    onSubmit: (submission) => {\n      dispatch(saveSubmission('submission', submission, ownProps.match.params.formId, (err, submission) => {\n        if (!err) {\n          dispatch(resetSubmissions('submission'));\n          dispatch(push(`/form/${ownProps.match.params.formId}/submission/${submission._id}`))\n        }\n      }));\n    }\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(View)\n","import React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux'\nimport {selectRoot, resetSubmissions, saveSubmission, Form, selectError, Errors} from 'react-formio';\nimport {push} from 'connected-react-router';\nimport Loading from '../../../../../containers/Loading'\n\nconst Edit = class extends Component {\n  render() {\n    const {\n      hideComponents,\n      onSubmit,\n      options,\n      errors,\n      form: {form, isActive: isFormActive},\n      submission: {submission, isActive: isSubActive, url}\n    } = this.props;\n\n    if (isFormActive || isSubActive) {\n      return <Loading />;\n    }\n\n    return (\n      <div>\n        <h3>Edit { form.title } Submission</h3>\n        <Errors errors={errors} />\n        <Form\n          form={form}\n          submission={submission}\n          url={url}\n          hideComponents={hideComponents}\n          onSubmit={onSubmit}\n          options={{...{template: 'bootstrap3', iconset: 'fa'},  ...options}}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    form: selectRoot('form', state),\n    submission: selectRoot('submission', state),\n    options: {\n      noAlerts: true,\n    },\n    errors: [\n      selectError('submission', state),\n      selectError('form', state)\n    ],\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    onSubmit: (submission) => {\n      dispatch(saveSubmission('submission', submission, ownProps.match.params.formId, (err, submission) => {\n        if (!err) {\n          dispatch(resetSubmissions('submission'));\n          dispatch(push(`/form/${ownProps.match.params.formId}/submission/${submission._id}`))\n        }\n      }));\n    }\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Edit)\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Confirm from '../../../../../containers/Confirm';\nimport {deleteSubmission, resetSubmissions, selectError, Errors} from 'react-formio';\nimport {push, goBack} from 'connected-react-router';\n\nconst Delete = props => (\n  <div>\n    <Errors errors={props.errors} />\n    <Confirm {...props} />\n  </div>\n)\n\n\nconst mapStateToProps = (state) => {\n  return {\n    message: `Are you sure you wish to delete the submission \"${state.submission.submission._id}\"?`,\n    errors: [\n      selectError('submission', state),\n      selectError('form', state)\n    ],\n  }\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    onYes: () => {\n      dispatch(deleteSubmission('submission', ownProps.match.params.submissionId, ownProps.match.params.formId, (err) => {\n        if (!err) {\n          dispatch(resetSubmissions('submissions'));\n          dispatch(push(`/form/${ownProps.match.params.formId}/submission`));\n        }\n      }));\n    },\n    onNo: () => {\n      dispatch(goBack());\n    }\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Delete)\n","import { Link, Route, Switch } from 'react-router-dom'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport View from './View'\nimport Edit from './Edit'\nimport Delete from './Delete'\nimport {getSubmission} from \"react-formio\";\n\nconst Item = class extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      submissionId: ''\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.match.params.submissionId !== prevState.submissionId) {\n      nextProps.getSubmission(nextProps.match.params.submissionId);\n    }\n\n    return {\n      submissionId: nextProps.match.params.submissionId\n    };\n  }\n  render() {\n    const {match: {params: {formId, submissionId}}} = this.props;\n    return (\n      <div>\n        <ul className=\"nav nav-tabs\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to={`/form/${formId}/submission`}>\n              <i className=\"fa fa-chevron-left\"></i>\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to={`/form/${formId}/submission/${submissionId}`}>\n              <i className=\"fa fa-eye\"></i> View\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to={`/form/${formId}/submission/${submissionId}/edit`}>\n              <i className=\"fa fa-edit\"></i> Edit\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to={`/form/${formId}/submission/${submissionId}/delete`}>\n              <i className=\"fa fa-trash\"></i> Delete\n            </Link>\n          </li>\n        </ul>\n        <Switch>\n          <Route exact path=\"/form/:formId/submission/:submissionId\" component={View} />\n          <Route path=\"/form/:formId/submission/:submissionId/edit\" component={Edit} />\n          <Route path=\"/form/:formId/submission/:submissionId/delete\" component={Delete} />\n        </Switch>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = () => {\n  return {};\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    getSubmission: (id) => dispatch(getSubmission('submission', id, ownProps.match.params.formId))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Item)\n","import { Route, Switch } from 'react-router-dom'\nimport React from 'react'\nimport List from './List'\nimport Item from './Item/index'\n\nconst Form = () => (\n  <div>\n    <Switch>\n      <Route exact path=\"/form/:formId/submission\" component={List} />\n      <Route path=\"/form/:formId/submission/:submissionId\" component={Item} />\n    </Switch>\n  </div>\n)\n\nexport default Form\n","import { Link, Route, Switch } from 'react-router-dom'\nimport React, { Component } from 'react'\nimport View from './View'\nimport Edit from './Edit'\nimport Delete from './Delete'\nimport Submission from './Submission/index'\nimport { connect } from 'react-redux'\nimport { getForm } from 'react-formio'\n\nconst Item = class extends Component{\n  constructor() {\n    super();\n\n    this.state = {\n      formId: ''\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.match.params.formId !== prevState.formId) {\n      nextProps.getForm(nextProps.match.params.formId);\n    }\n\n    return {\n      formId: nextProps.match.params.formId\n    };\n  }\n\n  render() {\n    const {match: {params: {formId}}} = this.props;\n    return (\n      <div>\n        <ul className=\"nav nav-tabs\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/form\">\n              <i className=\"fa fa-chevron-left\"></i>\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to={`/form/${formId}`}>\n              <i className=\"fa fa-pencil\"></i> Enter Data\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to={`/form/${formId}/submission`}>\n              <i className=\"fa fa-list-alt\"></i> View Data\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to={`/form/${formId}/edit`}>\n              <i className=\"fa fa-edit\"></i> Edit Form\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to={`/form/${formId}/delete`}>\n              <i className=\"fa fa-trash\"></i> Delete Form\n            </Link>\n          </li>\n        </ul>\n        <Switch>\n          <Route exact path=\"/form/:formId\" component={View} />\n          <Route path=\"/form/:formId/edit\" component={Edit} />\n          <Route path=\"/form/:formId/delete\" component={Delete} />\n          <Route path=\"/form/:formId/submission\" component={Submission} />\n        </Switch>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = () => {\n  return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getForm: (id) => dispatch(getForm('form', id))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Item);\n","import { Route, Switch } from 'react-router-dom'\nimport React from 'react'\nimport List from './List';\nimport Create from './Create';\nimport Item from './Item/index'\n\nconst Form = () => (\n  <div>\n    <Switch>\n      <Route exact path=\"/form\" component={List} />\n      <Route exact path=\"/form/create\" component={Create} />\n      <Route path=\"/form/:formId\" component={Item} />\n    </Switch>\n  </div>\n)\n\nexport default Form\n\n\n","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport { push } from 'connected-react-router';\nimport { getForm, getSubmissions, selectRoot, selectError, SubmissionGrid, Errors } from 'react-formio';\nimport Loading from '../../containers/Loading';\n\nconst List = class extends Component {\n  componentWillMount() {\n    this.props.getForm();\n    this.props.getSubmissions(1);\n  }\n\n  render() {\n    const {form, submissions, isLoading, onAction, getSubmissions, errors} = this.props\n\n    if (isLoading) {\n      return (\n        <Loading />\n      );\n    }\n\n    if (errors.length && errors[0] === 'Invalid alias') {\n      return (\n        <div className=\"alert alert-warning\">\n          You have not yet created an Event Resource in your project. Either create an Event Resource with the path of \"event\" or import the src/project.json into your project.\n        </div>\n      )\n    }\n\n    return (\n      <div className='form-index'>\n        <h1>Events</h1>\n        <Errors errors={errors} />\n        <SubmissionGrid\n          submissions={submissions}\n          form={form}\n          onAction={onAction}\n          getSubmissions={getSubmissions}\n        />\n        <Link className='btn btn-primary' to={`/event/create`}>\n          <i className='glyphicon glyphicon-plus fa fa-plus' aria-hidden='true'></i>\n          New {form.title}\n        </Link>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const form = selectRoot('form', selectRoot('event', state));\n  const submissions = selectRoot('submissions', selectRoot('event', state));\n\n  return {\n    form: form.form,\n    submissions: submissions,\n    isLoading: form.isActive || submissions.isActive,\n    errors: [\n      selectError('submissions', selectRoot('event', state)),\n      selectError('form', selectRoot('event', state))\n    ]\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    getForm: () => dispatch(getForm('event')),\n    getSubmissions: (page, query) => dispatch(getSubmissions('event', page, query)),\n    onAction: (submission, action) => {\n     switch(action) {\n        case 'view':\n        case 'row':\n          dispatch(push(`/event/${submission._id}`));\n          break;\n        case 'edit':\n          dispatch(push(`/form/${ownProps.match.params.formId}/submission/${submission._id}/edit`));\n          break;\n        case 'delete':\n          dispatch(push(`/form/${ownProps.match.params.formId}/submission/${submission._id}/delete`));\n          break;\n        default:\n      }\n    },\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(List)\n","import React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux'\nimport {selectRoot, resetSubmissions, saveSubmission, Form, selectError, Errors, getForm} from 'react-formio';\nimport {push} from 'connected-react-router';\nimport Loading from '../../containers/Loading';\n\nconst View = class extends Component {\n  componentWillMount() {\n    this.props.getForm();\n  }\n\n  render() {\n    const {\n      submission,\n      hideComponents,\n      onSubmit,\n      errors,\n      options,\n      form: {form, isActive, url}\n    } = this.props;\n\n    if (isActive) {\n      return <Loading />;\n    }\n\n    return (\n      <div>\n        <h3>New { form.title }</h3>\n        <Errors errors={errors} />\n        <Form\n          form={form}\n          submission={submission}\n          url={url}\n          options={options}\n          hideComponents={hideComponents}\n          onSubmit={onSubmit}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    form: selectRoot('form', selectRoot('event', state)),\n    errors: [\n      selectError('form', selectRoot('event', state)),\n      selectError('submission', selectRoot('event', state)),\n    ],\n    options: {\n      noAlerts: true\n    },\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    getForm: () => dispatch(getForm('event')),\n    onSubmit: (submission) => {\n      dispatch(saveSubmission('event', submission, null, (err, submission) => {\n        if (!err) {\n          dispatch(resetSubmissions('event'));\n          dispatch(push(`/event`))\n        }\n      }));\n    }\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(View)\n","import React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux'\nimport {selectRoot, resetSubmissions, saveSubmission, Form, selectError, Errors} from 'react-formio';\nimport {push} from 'connected-react-router';\nimport Loading from '../../../containers/Loading'\n\nconst View = class extends Component {\n  render() {\n    const {\n      hideComponents,\n      onSubmit, options,\n      errors,\n      form: {form, isActive: isFormActive},\n      submission: {submission, isActive: isSubActive, url}\n    } = this.props;\n\n    if (isFormActive || isSubActive) {\n      return <Loading />;\n    }\n\n    return (\n      <div>\n        <h3>View Event</h3>\n        <Errors errors={errors} />\n        <Form\n          form={form}\n          submission={submission}\n          url={url}\n          hideComponents={hideComponents}\n          onSubmit={onSubmit}\n          options={options}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    form: selectRoot('form', selectRoot('event', state)),\n    submission: selectRoot('submission', selectRoot('event', state)),\n    options: {\n      readOnly: true,\n    },\n    errors: [\n      selectError('submission', selectRoot('event', state)),\n      selectError('form', selectRoot('event', state))\n    ],\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    onSubmit: (submission) => {\n      dispatch(saveSubmission('event', submission, ownProps.match.params.formId, (err, submission) => {\n        if (!err) {\n          dispatch(resetSubmissions('event'));\n          dispatch(push(`/event/${submission._id}`))\n        }\n      }));\n    }\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(View)\n","import React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux'\nimport {selectRoot, resetSubmissions, saveSubmission, Form, selectError, Errors} from 'react-formio';\nimport {push} from 'connected-react-router';\nimport Loading from '../../../containers/Loading'\n\nconst Edit = class extends Component {\n  render() {\n    const {\n      hideComponents,\n      onSubmit,\n      options,\n      errors,\n      form: {form, isActive: isFormActive},\n      submission: {submission, isActive: isSubActive, url}\n    } = this.props;\n\n    if (isFormActive || isSubActive) {\n      return <Loading />;\n    }\n\n    return (\n      <div>\n        <h3>Edit Event</h3>\n        <Errors errors={errors} />\n        <Form\n          form={form}\n          submission={submission}\n          url={url}\n          hideComponents={hideComponents}\n          onSubmit={onSubmit}\n          options={options}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    form: selectRoot('form', selectRoot('event', state)),\n    submission: selectRoot('submission', selectRoot('event', state)),\n    options: {\n      noAlerts: true,\n    },\n    errors: [\n      selectError('submission', selectRoot('event', state)),\n      selectError('form', selectRoot('event', state))\n    ],\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    onSubmit: (submission) => {\n      dispatch(saveSubmission('event', submission, ownProps.match.params.formId, (err, submission) => {\n        if (!err) {\n          dispatch(resetSubmissions('event'));\n          dispatch(push(`/event/${submission._id}`))\n        }\n      }));\n    }\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Edit)\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Confirm from '../../../containers/Confirm';\nimport _get from 'lodash/get';\nimport {deleteSubmission, resetSubmissions, selectError, Errors} from 'react-formio';\nimport {push, goBack} from 'connected-react-router';\n\nconst Delete = props => (\n  <div>\n    <Errors errors={props.errors} />\n    <Confirm {...props} />\n  </div>\n)\n\n\nconst mapStateToProps = (state) => {\n  return {\n    message: `Are you sure you wish to delete the event \"${_get(state, 'event.submission.submission.data.title', '')}\"?`,\n    errors: [\n      selectError('submission', state),\n      selectError('form', state)\n    ],\n  }\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    onYes: () => {\n      dispatch(deleteSubmission('event', ownProps.match.params.eventId, null, (err) => {\n        if (!err) {\n          dispatch(resetSubmissions('event'));\n          dispatch(push(`/event`));\n        }\n      }));\n    },\n    onNo: () => {\n      dispatch(goBack());\n    }\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Delete)\n","import { Link, Route, Switch } from 'react-router-dom'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport View from './View'\nimport Edit from './Edit'\nimport Delete from './Delete'\nimport {getForm, getSubmission} from \"react-formio\";\n\nconst Item = class extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      eventId: ''\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.match.params.eventId !== prevState.eventId) {\n      nextProps.getForm();\n      nextProps.getSubmission(nextProps.match.params.eventId);\n    }\n\n    return {\n      eventId: nextProps.match.params.eventId\n    };\n  }\n\n  render() {\n    const {match: {params: {eventId}}} = this.props;\n    return (\n      <div>\n        <ul className=\"nav nav-tabs\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to={`/event`}>\n              <i className=\"fa fa-chevron-left\"></i>\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to={`/event/${eventId}`}>\n              <i className=\"fa fa-eye\"></i> View\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to={`/event/${eventId}/edit`}>\n              <i className=\"fa fa-edit\"></i> Edit\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to={`/event/${eventId}/delete`}>\n              <i className=\"fa fa-trash\"></i> Delete\n            </Link>\n          </li>\n        </ul>\n        <Switch>\n          <Route exact path=\"/event/:eventId\" component={View} />\n          <Route path=\"/event/:eventId/edit\" component={Edit} />\n          <Route path=\"/event/:eventId/delete\" component={Delete} />\n        </Switch>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = () => {\n  return {};\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    getForm: () => dispatch(getForm('event')),\n    getSubmission: (id) => dispatch(getSubmission('event', id))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Item)\n","import { Route, Switch } from 'react-router-dom'\nimport React from 'react'\nimport List from './List'\nimport Create from './Create'\nimport Item from './Item/index'\n\nconst Form = () => (\n  <div>\n    <Switch>\n      <Route exact path=\"/event\" component={List} />\n      <Route exact path=\"/event/create\" component={Create} />\n      <Route path=\"/event/:eventId\" component={Item} />\n    </Switch>\n  </div>\n)\n\nexport default Form\n","import React from 'react';\nimport { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Form } from 'react-formio';\n\nexport default class Colonie extends Component {\n    render() {\n            return (\n                    <div>\n                    <Form src=\"https://ivzftkhgysqjtha.form.io/iscrizioni\" />\n                    </div>\n                   );\n    }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form } from 'react-formio';\nimport { push } from 'connected-react-router'\nimport {AppConfig, AuthConfig} from '../../config';\nimport { setUser } from 'react-formio';\n\nconst Login = class  extends Component {\n  render() {\n    return (\n      <Form {...this.props} />\n    );\n  }\n}\n\nconst mapStateToProps = () => {\n  return {\n    src: AppConfig.projectUrl + '/' + AuthConfig.login.form\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSubmitDone: (submission) => {\n      dispatch(push(AuthConfig.authState));\n      dispatch(setUser(submission));\n    }\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Login)\n","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport { Form } from 'react-formio';\nimport { AppConfig, AuthConfig } from \"../../config\";\nimport { setUser } from \"react-formio\";\nimport {push} from \"connected-react-router\";\n\nconst Register = class extends Component {\n  render() {\n    return (\n      <Form {...this.props} />\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    src: AppConfig.projectUrl + '/' + AuthConfig.register.form\n  };\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    onSubmitDone: (submission) => {\n      dispatch(push(AuthConfig.authState));\n      dispatch(setUser(submission));\n    }\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Register)\n","import React, {Component} from 'react';\nimport NavLink from '../../containers/NavLink';\nimport Login from './Login';\nimport Register from './Register';\nimport {Route} from \"react-router-dom\";\nimport {AppConfig} from '../../config';\n\nconst Auth = class extends Component {\n  render() {\n    const {location} = this.props;\n    return (location.pathname === '/auth') ?\n      <div className=\"row\">\n        { AppConfig.projectUrl !== 'https://reactstarter.form.io' ?\n          <div className=\"col-md-12\">\n            <div className=\"alert alert-warning\">You can register a regular user here. To register an Admin user, go to your project in the form.io portal, navigate to the Admin resource and create an Admin.</div>\n          </div>\n          : null\n        }\n        <div className=\"col-lg-6 col-md-6\">\n          <div className=\"panel panel-primary login-container card\">\n            <div className=\"panel-heading card-header\">\n              Login\n            </div>\n            <div className=\"panel-body card-body\">\n              <Login />\n            </div>\n          </div>\n        </div>\n        <div className=\"col-lg-6 col-md-6\">\n          <div className=\"panel panel-primary register-container card\">\n            <div className=\"panel-heading card-header\">\n              Register\n            </div>\n            <div className=\"panel-body card-body\">\n              <Register />\n            </div>\n          </div>\n        </div>\n      </div> :\n      <div className=\"row\">\n        <div className=\"col-md-6 col-md-offset-3\">\n          <div className=\"panel panel-default card\">\n            <div className=\"panel-heading card-header\" style={{paddingBottom: 0, borderBottom: 'none'}}>\n              <ul className=\"nav nav-tabs\" style={{borderBottom: 'none'}}>\n                <NavLink to={'/auth/login'}>Login</NavLink>\n                <NavLink to={'/auth/register'}>Register</NavLink>\n              </ul>\n            </div>\n            <div className=\"panel-body card-body\">\n              <div className=\"row\">\n                <div className=\"col-lg-12\">\n                  <Route path=\"/auth/login\" component={Login} />\n                  <Route path=\"/auth/register\" component={Register} />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>;\n  }\n}\n\nexport default Auth\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport Header from './containers/Header';\nimport Footer from './containers/Footer';\nimport Home from './views/Home';\nimport Form from './views/Form';\nimport Event from './views/Event';\nimport Colonie from './views/Colonie';\nimport Auth from './views/Auth/Auth';\nimport { AppConfig } from './config';\n\nconst App = () => (\n  <div>\n    <Header />\n\n    <div className=\"container\" id=\"main\">\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/form\" component={Form} />\n      <Route path=\"/event\" component={Event} />\n      <Route path=\"/colonie\" component={Colonie} />\n      <Route path=\"/auth\" component={Auth} />\n    </div>\n\n    <Footer />\n  </div>\n)\n\nexport default App\n","import Base from 'formiojs/components/_classes/component/Component';\nimport editForm from 'formiojs/components/table/Table.form'\n\nexport default class CheckMatrix extends Base {\n  constructor(component, options, data) {\n    super(component, options, data);\n    this.foo = 'bar';\n  }\n\n  static schema() {\n    return Base.schema({\n      type: 'checkmatrix',\n      numRows: 3,\n      numCols: 3\n    });\n  }\n\n  static builderInfo = {\n    title: 'Check Matrix',\n    group: 'basic',\n    icon: 'fa fa-table',\n    weight: 70,\n    documentation: 'http://help.form.io/userguide/#table',\n    schema: CheckMatrix.schema()\n  }\n\n  static editForm = editForm\n\n  /**\n   * Render returns an html string of the fully rendered component.\n   *\n   * @param children - If this class is extendended, the sub string is passed as children.\n   * @returns {string}\n   */\n  render(children) {\n    // To make this dynamic, we could call this.renderTemplate('templatename', {}).\n\n    let tableClass = 'table ';\n    ['striped', 'bordered', 'hover', 'condensed'].forEach((prop) => {\n      if (this.component[prop]) {\n        tableClass += `table-${prop} `;\n      }\n    });\n\n    let content = '';\n\n    for (let i = 0; i < this.component.numRows; i++) {\n      let row = '<tr>';\n      for (let j = 0; j < this.component.numCols; j++) {\n        let cell = '<td>';\n\n        cell += this.renderTemplate('input', {\n          input: {\n            type: 'input',\n            ref: `${this.component.key}-${i}`,\n            attr: {\n              id: `${this.component.key}-${i}-${j}`,\n              class: 'form-control',\n              type: 'checkbox',\n            }\n          }\n        });\n\n        cell += '</td>';\n        row += cell;\n      }\n      row += '</tr>';\n      content += row;\n    }\n\n    // Calling super.render will wrap it html as a component.\n    return super.render(`\n<table class=${tableClass}>\n  <tbody>\n     ${content}\n  </tbody>\n</table>\n    `);\n  }\n\n  /**\n   * After the html string has been mounted into the dom, the dom element is returned here. Use refs to find specific\n   * elements to attach functionality to.\n   *\n   * @param element\n   * @returns {Promise}\n   */\n  attach(element) {\n    const refs = {};\n\n    for (let i = 0; i < this.component.numRows; i++) {\n      refs[`${this.component.key}-${i}`] = 'multiple';\n    }\n\n    this.loadRefs(element, refs);\n\n    this.checks = [];\n    for (let i = 0; i < this.component.numRows; i++) {\n      this.checks[i] = Array.prototype.slice.call(this.refs[`${this.component.key}-${i}`], 0);\n\n      // Attach click events to each input in the row\n      this.checks[i].forEach(input => {\n        this.addEventListener(input, 'click', () => this.updateValue())\n      });\n    }\n\n    // Allow basic component functionality to attach like field logic and tooltips.\n    return super.attach(element);\n  }\n\n  /**\n   * Get the value of the component from the dom elements.\n   *\n   * @returns {Array}\n   */\n  getValue() {\n    var value = [];\n    for (var rowIndex in this.checks) {\n      var row = this.checks[rowIndex];\n      value[rowIndex] = [];\n      for (var colIndex in row) {\n        var col = row[colIndex];\n        value[rowIndex][colIndex] = !!col.checked;\n      }\n    }\n    return value;\n  }\n\n  /**\n   * Set the value of the component into the dom elements.\n   *\n   * @param value\n   * @returns {boolean}\n   */\n  setValue(value) {\n    if (!value) {\n      return;\n    }\n    for (var rowIndex in this.checks) {\n      var row = this.checks[rowIndex];\n      if (!value[rowIndex]) {\n        break;\n      }\n      for (var colIndex in row) {\n        var col = row[colIndex];\n        if (!value[rowIndex][colIndex]) {\n          return false;\n        }\n        let checked = value[rowIndex][colIndex] ? 1 : 0;\n        col.value = checked;\n        col.checked = checked;\n      }\n    }\n  }\n}\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { ReactComponent } from 'react-formio';\nimport settingsForm from './ReactExample.settingsForm';\n\n/**\n * An example React component\n *\n * Replace this with your custom react component. It needs to have two things.\n * 1. The value should be stored is state as \"value\"\n * 2. When the value changes, call props.onChange(null, newValue);\n *\n * This component is very simple. When clicked, it will set its value to \"Changed\".\n */\nconst Example = class extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: props.value\n    }\n  }\n\n  setValue = () => {\n    this.setState({value: 'Changed'}, () => this.props.onChange(null, this.state.value));\n  }\n\n  render() {\n    return  (\n      <h1 onClick={this.setValue}>Click Me {this.state.value}</h1>\n    );\n  }\n};\n\nexport default class ReactExample extends ReactComponent {\n  /**\n   * This function tells the form builder about your component. It's name, icon and what group it should be in.\n   *\n   * @returns {{title: string, icon: string, group: string, documentation: string, weight: number, schema: *}}\n   */\n  static get builderInfo() {\n    return {\n      title: 'React Example',\n      icon: 'square',\n      group: 'basic',\n      documentation: '',\n      weight: -10,\n      schema: ReactExample.schema()\n    };\n  }\n\n  /**\n   * This function is the default settings for the component. At a minimum you want to set the type to the registered\n   * type of your component (i.e. when you call Components.setComponent('type', MyComponent) these types should match.\n   *\n   * @param sources\n   * @returns {*}\n   */\n  static schema() {\n    return ReactComponent.schema({\n      type: 'reactexample',\n      label: 'Default Label',\n    });\n  }\n\n  /*\n   * Defines the settingsForm when editing a component in the builder.\n   */\n  static editForm = settingsForm;\n\n  /**\n   * This function is called when the DIV has been rendered and added to the DOM. You can now instantiate the react component.\n   *\n   * @param DOMElement\n   * #returns ReactInstance\n   */\n  attachReact(element) {\n    console.log('attachReact', element);\n    return ReactDOM.render(\n      <Example\n        component={this.component} // These are the component settings if you want to use them to render the component.\n        value={this.dataValue} // The starting value of the component.\n        onChange={this.updateValue} // The onChange event to call when the value changes.\n      />,\n      element\n    );\n  }\n\n  /**\n   * Automatically detach any react components.\n   *\n   * @param element\n   */\n  detachReact(element) {\n    console.log('detachReact', element);\n    if (element) {\n      ReactDOM.unmountComponentAtNode(element);\n    }\n  }\n}\n","import baseEditForm from 'formiojs/components/_classes/component/Component.form';\n\nexport default (...extend) => {\n  return baseEditForm([\n    {\n      key: 'display',\n      components: [\n        {\n          // You can ignore existing fields.\n          key: 'placeholder',\n          ignore: true,\n        },\n        {\n          // Or add your own. The syntax is form.io component definitions.\n          type: 'textfield',\n          input: true,\n          label: 'My Custom Setting',\n          weight: 12,\n          key: 'myCustomSetting', // This will be available as component.myCustomSetting\n        },\n      ]\n    },\n    {\n      key: 'data',\n      components: [],\n    },\n    {\n      key: 'validation',\n      components: [],\n    },\n    {\n      key: 'api',\n      components: [],\n    },\n    {\n      key: 'conditional',\n      components: [],\n    },\n    {\n      key: 'logic',\n      components: [],\n    },\n  ], ...extend);\n}\n","import CheckMatrix from './CheckMatrix';\nimport ReactExample from \"./ReactExample/ReactExample\";\n\nexport default {\n  checkmatrix: CheckMatrix,\n  reactexample: ReactExample,\n}\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { ConnectedRouter } from 'connected-react-router'\nimport store, { history } from './store'\nimport { initAuth, Formio, Components } from 'react-formio';\nimport App from './App'\n\nimport components from './components';\nimport {AppConfig} from './config';\n\nimport './styles.scss'\n\nFormio.setProjectUrl(AppConfig.projectUrl);\nFormio.setBaseUrl(AppConfig.apiUrl);\nComponents.setComponents(components);\n\n// Initialize the current user\nstore.dispatch(initAuth());\n\nrender(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <div>\n        <App />\n      </div>\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}